@using Pawnshop.Application.UsersApplication.Dto
@using Pawnshop.Application.UsersApplication.Responses
@using Pawnshop.Web.Exceptions
@using Pawnshop.Web.Services.ApiService

@inject ApiService ApiService

<MudDataGrid T="GetAllUsersDto"
             Items="@(usersFromApi?.Users ?? new List<GetAllUsersDto>())" 
             RowClassFunc="@( (user, index) => user == selectedUser ? "selected-row" : string.Empty)" 
             RowClick="OnRowClicked"
             DragDropColumnReordering="true" 
             ColumnsPanelReordering="true"
             ColumnResizeMode="ResizeMode.Column" 
             MultiSelection="false"
             Hideable="true" 
             Filterable="true" 
             Groupable="true" 
             FilterMode="DataGridFilterMode.Simple" 
             ShowMenuIcon="true"
             Striped="true">
    <Columns>
        <PropertyColumn Property="x => x.UserId" Title="User id" Hidden="true" DragAndDropEnabled="true" Groupable="true" Sortable="true" Filterable="true"/>
        <PropertyColumn Property="x => x.UserName" Title="User name" Hidden="false" DragAndDropEnabled="true" Groupable="true" Sortable="true" Filterable="true" />
        <PropertyColumn Property="x => x.Email" Title="Email" Hidden="false" DragAndDropEnabled="true" Groupable="true" Sortable="true" Filterable="true" />
        <PropertyColumn Property="x => x.Roles" Title="Roles" Hidden="false" DragAndDropEnabled="true" Groupable="true" Sortable="true" Filterable="true">
            <CellTemplate>
                @string.Join(", ", context.Item.Roles)
            </CellTemplate>
        </PropertyColumn>
        <PropertyColumn Property="@(x => x.Employee.EmployeeId)" Title="Employee id" Hidden="true" DragAndDropEnabled="true" Groupable="true" Sortable="true" Filterable="true" />
        <PropertyColumn Property="x => x.Employee.Name" Title="Name" Hidden="false" DragAndDropEnabled="true" Groupable="true" Sortable="true" Filterable="true" />
        <PropertyColumn Property="x => x.Employee.SecondName" Title="Second name" Hidden="true" DragAndDropEnabled="true" Groupable="true" Sortable="true" Filterable="true" />
        <PropertyColumn Property="x => x.Employee.Surname" Title="Surname" Hidden="false" DragAndDropEnabled="true" Groupable="true" Sortable="true" Filterable="true" />
        <PropertyColumn Property="@(x => x.Employee.BirthDate.ToString("dd.MM.yyyy"))" Title="BirthDate" Hidden="true" DragAndDropEnabled="true" Groupable="true" Sortable="true" Filterable="true" />
    </Columns>
</MudDataGrid>

@code {
    [Parameter]
    public EventCallback<GetAllUsersDto> OnUserSelected { get; set; }

    List<string> apiExceptions = null;
    public GetAllUsersResponse usersFromApi = new GetAllUsersResponse();
    private GetAllUsersDto selectedUser;


    protected override async Task OnInitializedAsync()
    {
        await GetUsersFromApiAsync();
        await InvokeAsync(StateHasChanged);
    }

    public async Task ReloadDataAsync()
    {
        await GetUsersFromApiAsync();
    }

    private async Task GetUsersFromApiAsync()
    {
        try
        {
            usersFromApi = await ApiService.GetAsync<GetAllUsersResponse>("/Users/get");
        }
        catch (ApiException ex)
        {
            apiExceptions = ex.ErrorMessages;
        }
    }

    private async Task OnRowClicked(DataGridRowClickEventArgs<GetAllUsersDto> row)
    {
        selectedUser = row.Item;
        await OnUserSelected.InvokeAsync(selectedUser);
    }
}

